// -*- mode: js -*-
// Open URLs in new buffer, not window.
url_remoting_fn = load_url_in_new_buffer

// Let's use hint-digits on the home row.
hint_digits = "aoeuhtns";

// Use history to complete URLs; thanks,
// <http://babbagefiles.blogspot.com/2011/01/conkeror-browsing-web-emacs-style.html>.
minibuffer_auto_complete_default = true;
url_completion_use_bookmarks = true;
url_completion_use_history = true;

// Display the URL before going to it in hints mode; thanks,
// <http://babbagefiles.blogspot.com/2011/01/conkeror-browsing-web-emacs-style.html>.
hints_display_url_panel = true;

// No downloads page at all
remove_hook("download_added_hook", open_download_buffer_automatically);

// Open a target in a new buffer, not a new window.
download_buffer_automatic_open_target = OPEN_NEW_BUFFER;

// View source in e.g. Emacs.
view_source_use_external_editor = true;

// Override $EDITOR.
editor_shell_command = "emacsclient";

// See downloads in the modeline.
add_hook("mode_line_hook", mode_line_adder(downloads_status_widget));

// Show tabs.
// 
// Second thought, let's see what we can do without tabs: they're
// slow.

// require("new-tabs.js");
// require("tab-bar.js");

// Show favicons.
require("favicon");
add_hook("mode_line_hook", mode_line_adder(buffer_icon_widget), true);
read_buffer_show_icons = true;

/// Webjumps

// Add a webjump for bookmarks.
define_webjump("bookmark",
               function(term) {return term;},
               $completer = history_completer($use_history = false,
                                              $use_bookmarks = true,
                                              $match_required = true),
               $description = "Visit a conkeror bookmark");

// Go to the OED.
define_webjump("oed", "http://oed.com/search?searchType=dictionary&q=%s")
define_webjump("g", "https://www.google.com/search?ie=UTF-8&oe=UTF-8&q=%s")
define_webjump("m", "https://search.corp.google.com/search?site=internal&entsp=a&sort=date:D:L:d1&client=internal&gsaRequestId=3732061082508767940&btnG=Search&entqr=3&access=a&oe=UTF-8&q=test&ie=UTF-8&ud=1&getfields=*&output=xml_no_dtd&proxystylesheet=internal&tlen=150#q=%s&start=0")

// Search Chicken.
define_webjump("chicken", "http://api.call-cc.org/cdoc?q=%s&query-name=Look+up")
define_webjump("chicken-regex", "http://api.call-cc.org/cdoc?q=%s&query-regex=Regexp")

// Pinboard this page (lots of flickering with tabs, though).
define_webjump("pinboard", "javascript:q=location.href;if(document.getSelection){d=document.getSelection();}else{d='';};p=document.title;void(open('https://pinboard.in/add?showtags=yes&url='+encodeURIComponent(q)+'&description='+encodeURIComponent(d)+'&title='+encodeURIComponent(p),'Pinboard','toolbar=no,scrollbars=yes,width=750,height=700'));")

// Convert with readability
define_webjump("readability", "javascript:((function(){window.baseUrl='https://www.readability.com';window.readabilityToken='';var s=document.createElement('script');s.setAttribute('type','text/javascript');s.setAttribute('charset','UTF-8');s.setAttribute('src',baseUrl+'/bookmarklet/read.js');document.documentElement.appendChild(s);})())")

define_webjump("google-bookmarks", "javascript:(function(){var%20a=window,b=document,c=encodeURIComponent,d=a.open(\"http://www.google.com/bookmarks/mark?op=edit&output=popup&bkmk=\"+c(b.location)+\"&title=\"+c(b.title),\"bkmk_popup\",\"left=\"+((a.screenX||a.screenLeft)+10)+\",top=\"+((a.screenY||a.screenTop)+10)+\",height=420px,width=550px,resizable=1,alwaysRaised=1\");a.setTimeout(function(){d.focus()},300)})();")

// Webjump aliases
webjumps.p = webjumps.pinboard
webjumps.r = webjumps.readability

// Bind webjumps and web-pages to functions.
interactive("open-pinboard", "pinboard", "follow", $browser_object = "pinboard");
interactive("open-pinboard-home", "pinboard-home", "follow", $browser_object = "pinboard.in/u:klutometis");
interactive("open-google-voice", "google-voice", "follow", $browser_object = "google.com/voice");
interactive("open-twitter", "twitter", "follow", $browser_object = "twitter.com/klutometis");
interactive("open-egg-index", "egg-index", "follow", $browser_object = "wiki.call-cc.org/chicken-projects/egg-index-4.html");
interactive("open-readability", "readability", "follow", $browser_object = "readability");
interactive("open-google-bookmarks", "google-bookmarks", "follow", $browser_object = "google-bookmarks");
interactive("open-google-bookmarks-home", "google-bookmarks-home", "follow", $browser_object = "google.com/bookmarks/");

// One-key, follow-new-buffer; from
// <http://conkeror.org/Tips#Follow_Links_in_a_New_Buffer_with_a_One-Key_Binding>.
define_key(content_buffer_normal_keymap, "t", "follow-new-buffer");
define_key(content_buffer_normal_keymap, "T", "follow-new-buffer-background");
define_key(content_buffer_normal_keymap, "n", "buffer-next");
define_key(content_buffer_normal_keymap, "h", "buffer-previous");
define_key(content_buffer_normal_keymap, "j", "cmd_scrollLineDown");
define_key(content_buffer_normal_keymap, "k", "cmd_scrollLineUp");
define_key(content_buffer_normal_keymap, "l", "find-url");
define_key(content_buffer_normal_keymap, "L", "find-alternate-url");
define_key(content_buffer_normal_keymap, "p", "open-pinboard");
define_key(content_buffer_normal_keymap, "b", "open-readability");
define_key(content_buffer_normal_keymap, "B", "open-google-bookmarks");
define_key(content_buffer_normal_keymap, "C-1", "open-pinboard-home");
define_key(content_buffer_normal_keymap, "C-2", "open-twitter");
define_key(content_buffer_normal_keymap, "C-3", "open-google-voice");
define_key(content_buffer_normal_keymap, "C-4", "open-egg-index");
define_key(content_buffer_normal_keymap, "C-5", "open-google-bookmarks-home");
define_key(content_buffer_normal_keymap, "C-w", "kill-current-buffer");
define_key(default_global_keymap, "n", "buffer-next");
define_key(default_global_keymap, "h", "buffer-previous");
define_key(default_global_keymap, "/", "isearch-forward");
define_key(default_global_keymap, "?", "isearch-backward");
define_key(default_global_keymap, "j", "cmd_scrollLineDown");
define_key(default_global_keymap, "k", "cmd_scrollLineUp");

// Selection searches: http://conkeror.org/Tips
function create_selection_search(webjump, key) {
  interactive(webjump+"-selection-search",
              "Search " + webjump + " with selection contents",
              "find-url-new-buffer",
              $browser_object = function (I) {
                return webjump + " " + I.buffer.top_frame.getSelection();});
  define_key(content_buffer_normal_keymap, key.toUpperCase(), webjump + "-selection-search");

  interactive("prompted-"+webjump+"-search", null,
              function (I) {
                var term = yield I.minibuffer.read_url($prompt = "Search "+webjump+":",
                                                       $initial_value = webjump+" ");
                browser_object_follow(I.buffer, OPEN_NEW_BUFFER, term);});
  define_key(content_buffer_normal_keymap, key, "prompted-" + webjump + "-search");}

// g was erstwhile find-url; G, find-alternate-url.
create_selection_search("g", "g");
create_selection_search("m", "m");
create_selection_search("oed", "o");
create_selection_search("chicken-regex", "d");

// Whether to select the URL initially; see
// <http://www.mozdev.org/pipermail/conkeror/2008-November/001194.html>.
minibuffer_read_url_select_initial = false;

// Switch to buffers with the number keys.
function define_switch_buffer_key (key, buf_num) {
    define_key(default_global_keymap, key,
               function (I) {
                   switch_to_buffer(I.window,
                                    I.window.buffers.get_buffer(buf_num));});}

for (let i = 0; i < 10; ++i) {
    define_switch_buffer_key(String((i+1)%10), i);}

// Switch to previously opened buffer; let's find a good key-binding
// for this.
interactive("switch-to-other-buffer",
            "Switch to the previously open buffer",
            function (I) {
                var blist = I.window.buffers.buffer_list
                if (blist.length > 1)
                    switch_to_buffer(I.window, blist[1]);});

// http://babbagefiles.blogspot.com/2011/01/conkeror-browsing-web-emacs-style.html
can_kill_last_buffer = false;

// Remember last save directory for downloads.
function update_save_path (info) {
    cwd = info.target_file.parent;}

add_hook("download_added_hook", update_save_path);

// Remember sessions
require("session.js");
session_auto_save_auto_load = true
session_auto_save_auto_load_fn = session_auto_save_load_window_current

// Password management
session_pref("signon.rememberSignons", true);
session_pref("signon.expireMasterPassword", false);
session_pref("signon.SignonFileName", "signons.txt");
Cc["@mozilla.org/login-manager;1"].getService(Ci.nsILoginManager);

session_pref("ui.key.generalAccessKey", 0);
// Focus-change blocking: <http://conkeror.org/Focus>. This actually
// destroys a lot of things like Google docs and Facebook.

// require("block-content-focus-change.js");
// function focusblock (buffer) {
//     var s = Components.utils.Sandbox(buffer.top_frame);
//     s.document = buffer.document.wrappedJSObject;
//     Components.utils.evalInSandbox(
//         "(function () {\
//             function nothing () {}\
//             if (! document.forms)\
//                 return;\
//             for (var i = 0, nforms = document.forms.length; i < nforms; i++) {\
//               for (var j = 0, nels = document.forms[i].elements.length; j < nels; j++)\
//                 document.forms[i].elements[j].focus = nothing;\
//             }\
//           })();",
//         s);}
// add_hook('content_buffer_progress_change_hook', focusblock);

// Block key-stealing by e.g. google, jira, github. It fucking works!
// Fuck Google's reappriation of my alphanums; fuck github's
// reappriation of slash; fuck jira's reappriation of slash.
//
// Thank god I've been manumitted from these tyrannical mother-fuckers
// with their opinionated interfaces.
// require("key-kill");
// key_kill_mode.test.push(build_url_regexp($domain = "github"));
// key_kill_mode.test.push(build_url_regexp($domain = "google"));
// key_kill_mode.test.push(build_url_regexp($domain = "slashdot"));
// key_kill_mode.test.push(build_url_regexp($domain = "truecarcorp"));

// Filename transformations for downloads
function suggest_save_path_from_file_name (file_name, buffer) {
    var cwd = with_current_buffer(buffer, function (I) I.local.cwd);
    var file = cwd.clone();
    for (let re in replace_map) {
        if (file_name.match(re)) {
            if (replace_map[re].path) {
                file = make_file(replace_map[re].path);
            }
            file_name = replace_map[re].transformer(file_name);
        }
    }    
    file.append(file_name);
    return file.path;
}

var replace_map = {
    ".": {
        "transformer": function (filename) {
            return filename.replace( /[\W ]+/g   , "-"   )
                           .replace( /^-+/       , ""    )
                           .replace( /-+$/       , ""    )
                           .replace( /-([^-]+)$/ , ".$1" )
                           .toLowerCase();
        }
    },
    "\.torrent$": {
        "path": "/media-files/",
        "transformer": function (filename) {
            return filename.replace( /isohunt-/i, "" );
        }
    }
};

// Also put new buffers after the current buffer, not at the end.
new_buffer_position = buffer_position_after;

// Open middle-clicked links in new buffers; thanks,
// <http://babbagefiles.blogspot.com/2011/01/conkeror-browsing-web-emacs-style.html>.
require("clicks-in-new-buffer.js");
clicks_in_new_buffer_target = OPEN_NEW_BUFFER_BACKGROUND;

// make C-c C-c "submit form"
define_key(default_global_keymap, "C-c C-c", "submit-form");

// make C-x 0 "kill other buffers"
define_key(default_global_keymap, "C-x 0", "kill-other-buffers");

// make C-x 1 "kill other buffers and head to about:blank"
define_key(default_global_keymap, "C-x 1",
           function(I) {
             browser_object_follow(I.buffer,
                                  OPEN_CURRENT_BUFFER,
                                  "about:blank")
             kill_other_buffers(I.buffer)
           });

// make C-x 2 "duplicate buffer"
interactive("duplicate-buffer", "Duplicate buffer",
            function (I) {
              browser_object_follow(I.buffer, OPEN_NEW_BUFFER, I.buffer.current_uri.spec);});
define_key(default_global_keymap, "C-x 2", "duplicate-buffer");

session_pref("network.proxy.type", 1)
session_pref("network.proxy.http", "127.0.0.1");
session_pref("network.proxy.http_port", 8118);
session_pref("network.proxy.ssl", "127.0.0.1");
session_pref("network.proxy.ssl_port", 8118);

function my_title_format (window) {
    return '{'+get_current_profile()+'} '+window.buffers.current.description;
}

title_format_fn = my_title_format;

clock_time_format = "%R"

add_hook("mode_line_hook", mode_line_adder(downloads_status_widget));

profile_widget.prototype = {
    constructor: clock_widget,
    __proto__: text_widget.prototype,
    update: function () {
      this.view.text = get_current_profile;
    }
};

clock2_widget.prototype = {
    constructor: clock_widget,
    __proto__: text_widget.prototype,
    update: function () {
        var time = new Date();
        this.view.text = time.toLocaleFormat(clock_time_format);
        this.view.text = "harro"
        if (time.getSeconds() > 0 || time.getMilliseconds() > 100) {
            this.window.clearTimeout(this.timer_ID);
            var time = time.getSeconds() * 1000 + time.getMilliseconds();
            time = 60000 - time;
            this.timer_ID = this.window.setTimeout(this.do_update, time);
            this.timer_timeout = true;
        } else if (this.timer_timeout) {
            this.window.clearTimeout(this.timer_ID);
            this.timer_ID = this.window.setInterval(this.do_update, 60000);
            this.timer_timeout = false;
        }
    },
    destroy: function () {
        this.window.clearTimeout(this.timer_ID);
    }
};

add_hook("mode_line_hook", mode_line_adder(clock2_widget));
