#!/usr/bin/env python3
"""
PAC Work Server - Fetches corporate PAC file and routes all DIRECT traffic through privoxy
Usage: pac-work [port]
"""
import http.server
import socketserver
import urllib.request
import sys
import os

def main():
    port = int(sys.argv[1]) if len(sys.argv) > 1 else 18000
    
    pac_url = os.environ.get('CORP_PAC_URL')
    if not pac_url:
        print("Error: CORP_PAC_URL environment variable not set")
        print("Make sure ~/.env-secrets is sourced in your shell")
        sys.exit(1)

    class ReusableTCPServer(socketserver.ThreadingTCPServer):
        allow_reuse_address = True

    class PACHandler(http.server.BaseHTTPRequestHandler):
        def do_GET(self):
            if self.path == '/pac.js' or self.path == '/':
                try:
                    with urllib.request.urlopen(pac_url) as response:
                        pac_content = response.read().decode('utf-8')

                    modified_pac = pac_content.replace('"DIRECT"', '"PROXY 127.0.0.1:8118"')

                    self.send_response(200)
                    self.send_header('Content-Type', 'application/x-ns-proxy-autoconfig')
                    self.end_headers()
                    self.wfile.write(modified_pac.encode('utf-8'))
                except BrokenPipeError:
                    # Client disconnected, just log and move on
                    self.log_message("Client disconnected during response")
                except Exception as e:
                    self.send_error(500, f"Error fetching PAC: {e}")
            else:
                self.send_error(404)

    with ReusableTCPServer(("", port), PACHandler) as httpd:
        print(f"Serving modified PAC at http://localhost:{port}/pac.js")
        httpd.serve_forever()

if __name__ == "__main__":
    main()
